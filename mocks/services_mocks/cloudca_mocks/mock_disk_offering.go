// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./services/cloudca/disk_offering.go

package cloudca_mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of DiskOfferingService interface
type MockDiskOfferingService struct {
	ctrl     *gomock.Controller
	recorder *_MockDiskOfferingServiceRecorder
}

// Recorder for MockDiskOfferingService (not exported)
type _MockDiskOfferingServiceRecorder struct {
	mock *MockDiskOfferingService
}

func NewMockDiskOfferingService(ctrl *gomock.Controller) *MockDiskOfferingService {
	mock := &MockDiskOfferingService{ctrl: ctrl}
	mock.recorder = &_MockDiskOfferingServiceRecorder{mock}
	return mock
}

func (_m *MockDiskOfferingService) EXPECT() *_MockDiskOfferingServiceRecorder {
	return _m.recorder
}

func (_m *MockDiskOfferingService) Get(id string) (*DiskOffering, error) {
	ret := _m.ctrl.Call(_m, "Get", id)
	ret0, _ := ret[0].(*DiskOffering)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDiskOfferingServiceRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockDiskOfferingService) List() ([]DiskOffering, error) {
	ret := _m.ctrl.Call(_m, "List")
	ret0, _ := ret[0].([]DiskOffering)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDiskOfferingServiceRecorder) List() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List")
}

func (_m *MockDiskOfferingService) ListWithOptions(options map[string]string) ([]DiskOffering, error) {
	ret := _m.ctrl.Call(_m, "ListWithOptions", options)
	ret0, _ := ret[0].([]DiskOffering)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDiskOfferingServiceRecorder) ListWithOptions(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListWithOptions", arg0)
}
