// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./services/cloudca/tier.go

package cloudca_mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of TierService interface
type MockTierService struct {
	ctrl     *gomock.Controller
	recorder *_MockTierServiceRecorder
}

// Recorder for MockTierService (not exported)
type _MockTierServiceRecorder struct {
	mock *MockTierService
}

func NewMockTierService(ctrl *gomock.Controller) *MockTierService {
	mock := &MockTierService{ctrl: ctrl}
	mock.recorder = &_MockTierServiceRecorder{mock}
	return mock
}

func (_m *MockTierService) EXPECT() *_MockTierServiceRecorder {
	return _m.recorder
}

func (_m *MockTierService) Get(id string) (*Tier, error) {
	ret := _m.ctrl.Call(_m, "Get", id)
	ret0, _ := ret[0].(*Tier)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTierServiceRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockTierService) List() ([]Tier, error) {
	ret := _m.ctrl.Call(_m, "List")
	ret0, _ := ret[0].([]Tier)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTierServiceRecorder) List() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List")
}

func (_m *MockTierService) ListOfVpc(vpcId string) ([]Tier, error) {
	ret := _m.ctrl.Call(_m, "ListOfVpc", vpcId)
	ret0, _ := ret[0].([]Tier)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTierServiceRecorder) ListOfVpc(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListOfVpc", arg0)
}

func (_m *MockTierService) ListWithOptions(options map[string]string) ([]Tier, error) {
	ret := _m.ctrl.Call(_m, "ListWithOptions", options)
	ret0, _ := ret[0].([]Tier)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTierServiceRecorder) ListWithOptions(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListWithOptions", arg0)
}
