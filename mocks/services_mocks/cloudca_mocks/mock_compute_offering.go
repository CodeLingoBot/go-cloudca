// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./services/cloudca/compute_offering.go

package cloudca_mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of ComputeOfferingService interface
type MockComputeOfferingService struct {
	ctrl     *gomock.Controller
	recorder *_MockComputeOfferingServiceRecorder
}

// Recorder for MockComputeOfferingService (not exported)
type _MockComputeOfferingServiceRecorder struct {
	mock *MockComputeOfferingService
}

func NewMockComputeOfferingService(ctrl *gomock.Controller) *MockComputeOfferingService {
	mock := &MockComputeOfferingService{ctrl: ctrl}
	mock.recorder = &_MockComputeOfferingServiceRecorder{mock}
	return mock
}

func (_m *MockComputeOfferingService) EXPECT() *_MockComputeOfferingServiceRecorder {
	return _m.recorder
}

func (_m *MockComputeOfferingService) Get(id string) (*ComputeOffering, error) {
	ret := _m.ctrl.Call(_m, "Get", id)
	ret0, _ := ret[0].(*ComputeOffering)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockComputeOfferingServiceRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockComputeOfferingService) List() ([]ComputeOffering, error) {
	ret := _m.ctrl.Call(_m, "List")
	ret0, _ := ret[0].([]ComputeOffering)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockComputeOfferingServiceRecorder) List() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List")
}

func (_m *MockComputeOfferingService) ListWithOptions(options map[string]string) ([]ComputeOffering, error) {
	ret := _m.ctrl.Call(_m, "ListWithOptions", options)
	ret0, _ := ret[0].([]ComputeOffering)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockComputeOfferingServiceRecorder) ListWithOptions(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListWithOptions", arg0)
}
