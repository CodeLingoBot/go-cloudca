// Automatically generated by MockGen. DO NOT EDIT!
// Source: configuration/organization.go

package cloudca_mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of OrganizationService interface
type MockOrganizationService struct {
	ctrl     *gomock.Controller
	recorder *_MockOrganizationServiceRecorder
}

// Recorder for MockOrganizationService (not exported)
type _MockOrganizationServiceRecorder struct {
	mock *MockOrganizationService
}

func NewMockOrganizationService(ctrl *gomock.Controller) *MockOrganizationService {
	mock := &MockOrganizationService{ctrl: ctrl}
	mock.recorder = &_MockOrganizationServiceRecorder{mock}
	return mock
}

func (_m *MockOrganizationService) EXPECT() *_MockOrganizationServiceRecorder {
	return _m.recorder
}

func (_m *MockOrganizationService) Get(id string) (*Organization, error) {
	ret := _m.ctrl.Call(_m, "Get", id)
	ret0, _ := ret[0].(*Organization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOrganizationServiceRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockOrganizationService) List() ([]Organization, error) {
	ret := _m.ctrl.Call(_m, "List")
	ret0, _ := ret[0].([]Organization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOrganizationServiceRecorder) List() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List")
}

func (_m *MockOrganizationService) ListWithOptions(options map[string]string) ([]Organization, error) {
	ret := _m.ctrl.Call(_m, "ListWithOptions", options)
	ret0, _ := ret[0].([]Organization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOrganizationServiceRecorder) ListWithOptions(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListWithOptions", arg0)
}
